{
    "collab_server" : "",
    "contents" : "\n# This is the user-interface definition of a Shiny web application.\n# You can find out more about building applications with Shiny here:\n#\n# http://shiny.rstudio.com\n#\n\nlibrary(shiny)\nlibrary(shinydashboard)\nlibrary(leaflet)\nlibrary(DT)\nlibrary(rgdal)\nlibrary(rgeos)\n# library(rmapshaper)\n# library(sf)\n\nshinyUI(dashboardPage(\n  dashboardHeader(title = \"Albatross4 Viewer\"),\n  dashboardSidebar(\n    sidebarMenu(\n      menuItem(\n        \"Data Preparation\", \n        tabName = \"data\", \n        icon = icon(\"database\")\n        # menuSubItem(\"Watersheds\", tabName = \"m_water\", icon = icon(\"map\")),\n        # menuSubItem(\"Population\", tabName = \"m_pop\", icon = icon(\"map\"))\n      ),\n      menuItem(\n        \"View Household\", \n        tabName = \"household\", \n        icon = icon(\"users\",lib = \"font-awesome\"),\n        menuSubItem(\"Map\", tabName = \"map-household\", icon = icon(\"globe\")),\n        menuSubItem(\"Graph\", tabName = \"graph-household\", icon = icon(\"signal\")),\n        menuSubItem(\"List\", tabName = \"list-household\", icon = icon(\"table\",lib=\"font-awesome\"))\n      ),\n      menuItem(\n        \"View Schedule\", \n        tabName = \"schedule\", \n        icon = icon(\"list-ol\", lib = \"font-awesome\"),\n        menuSubItem(\"Map\", tabName = \"map-schedule\", icon = icon(\"globe\")),\n        menuSubItem(\"Graph\", tabName = \"graph-schedule\", icon = icon(\"signal\")),\n        menuSubItem(\"List\", tabName = \"list-schedule\", icon = icon(\"table\",lib=\"font-awesome\"))\n      ),\n      menuItem(\n        \"Summary Statistics\", \n        tabName = \"statistics\", \n        icon = icon(\"stats\",lib = \"glyphicon\"),\n        menuSubItem(\"Map\", tabName = \"map-summary\", icon = icon(\"globe\")),\n        menuSubItem(\"Graph\", tabName = \"graph-summary\", icon = icon(\"chart-area\"))\n      )\n    )\n  ),\n  dashboardBody(\n    tabItems(\n      tabItem(tabName = \"data\",\n              tabsetPanel(type = \"tabs\",\n                          tabPanel(\"Household\",\n                                   sidebarLayout(\n                                     sidebarPanel( \n                                       \n                                       # Input: Select a file ----\n                                       fileInput(\"household\", \"Choose household data (less than 30MB)\",\n                                                 multiple = FALSE,\n                                                 accept = c(\"text/csv\",\n                                                            \"text/comma-separated-values,text/plain\",\n                                                            \".csv\")),\n                                       \n                                       # Input: Select separator ----\n                                       radioButtons(\"householdsep\", \"Separator\",\n                                                    choices = c(Comma = \",\",\n                                                                Semicolon = \";\",\n                                                                Tab = \"\\t\"),\n                                                    selected = \",\"),\n                                       \n                                       # Input: Select quotes ----\n                                       radioButtons(\"householdquote\", \"Quote\",\n                                                    choices = c(None = \"\",\n                                                                \"Double Quote\" = '\"',\n                                                                \"Single Quote\" = \"'\"),\n                                                    selected = '\"'),\n                                       \n                                       \n                                       \n                                       # Input: Checkbox if file has header ----\n                                       checkboxInput(\"householdheader\", \"Header\", TRUE),\n                                       \n                                       # Input: Select number of rows to display ----\n                                       radioButtons(\"householddisp\", \"Display\",\n                                                    choices = c(Head = \"head\",\n                                                                All = \"all\"),\n                                                    selected = \"head\")\n                                       \n                                     ),\n                                     mainPanel(\n                                       tableOutput(\"previewHousehold\"),\n                                       h3(textOutput(\"previewHouseholdTotal\")),\n                                       width = 12\n                                     )\n                                   )\n                          ),\n                          tabPanel(\"Schedule\",\n                                   sidebarLayout(\n                                     sidebarPanel( \n                                       \n                                       # Input: Select a file ----\n                                       fileInput(\"schedule\", \"Choose schedule data (less than 30MB)\",\n                                                 multiple = FALSE,\n                                                 accept = c(\"text/csv\",\n                                                            \"text/comma-separated-values,text/plain\",\n                                                            \".csv\")),\n                                       \n                                       # Input: Select separator ----\n                                       radioButtons(\"schedulesep\", \"Separator\",\n                                                    choices = c(Comma = \",\",\n                                                                Semicolon = \";\",\n                                                                Tab = \"\\t\"),\n                                                    selected = \",\"),\n                                       \n                                       # Input: Select quotes ----\n                                       radioButtons(\"schedulequote\", \"Quote\",\n                                                    choices = c(None = \"\",\n                                                                \"Double Quote\" = '\"',\n                                                                \"Single Quote\" = \"'\"),\n                                                    selected = '\"'),\n                                       \n                                       \n                                       \n                                       # Input: Checkbox if file has header ----\n                                       checkboxInput(\"scheduleheader\", \"Header\", TRUE),\n                                       \n                                       # Input: Select number of rows to display ----\n                                       radioButtons(\"scheduledisp\", \"Display\",\n                                                    choices = c(Head = \"head\",\n                                                                All = \"all\"),\n                                                    selected = \"head\")\n                                       \n                                     ),\n                                     mainPanel(\n                                       tableOutput(\"previewSchedule\"),\n                                       h3(textOutput(\"previewScheduleTotal\")),\n                                       width = 12\n                                     )\n                                   )\n                          )\n                          # tabPanel(\"ShapeFile\",\n                          #          sidebarLayout(\n                          #            sidebarPanel( \n                          #              \n                          #              # Input: Select a file ----\n                          #              fileInput(\"shape\", \"Choose shapefile data (less than 30MB)\",\n                          #                        multiple = FALSE,\n                          #                        accept = c(\"text/csv\",\n                          #                                   \"text/comma-separated-values,text/plain\",\n                          #                                   \".csv\")),\n                          #              \n                          #              # Input: Select separator ----\n                          #              radioButtons(\"sep\", \"Separator\",\n                          #                           choices = c(Comma = \",\",\n                          #                                       Semicolon = \";\",\n                          #                                       Tab = \"\\t\"),\n                          #                           selected = \",\"),\n                          #              \n                          #              # Input: Select quotes ----\n                          #              radioButtons(\"quote\", \"Quote\",\n                          #                           choices = c(None = \"\",\n                          #                                       \"Double Quote\" = '\"',\n                          #                                       \"Single Quote\" = \"'\"),\n                          #                           selected = '\"'),\n                          #              \n                          #              \n                          #              \n                          #              # Input: Checkbox if file has header ----\n                          #              checkboxInput(\"header\", \"Header\", TRUE),\n                          #              \n                          #              # Input: Select number of rows to display ----\n                          #              radioButtons(\"disp\", \"Display\",\n                          #                           choices = c(Head = \"head\",\n                          #                                       All = \"all\"),\n                          #                           selected = \"head\")\n                          #              \n                          #            ),\n                          #            mainPanel(\n                          #              tableOutput(\"previewSchedule\"),\n                          #              h3(textOutput(\"previewScheduleTotal\")),\n                          #              width = 12\n                          #            )\n                          #          )\n                          # )\n              )\n      ),\n      tabItem(tabName = \"list-household\",\n              fluidRow(DT::dataTableOutput(\"householdTotal\"),\n                       width = 12)\n      ),\n      tabItem(tabName = \"list-schedule\",\n              fluidRow(DT::dataTableOutput(\"scheduleTotal\"),\n                       width = 12)\n      ),\n      \n      \n      tabItem(tabName = \"map-household\",\n              \n              fluidRow(\n                column(width = 12,leafletOutput(\"maphh\",width = 1400, height = 700))\n              ),\n              fluidRow(verbatimTextOutput(\"Click_text\")\n              ),\n              fluidRow(tableOutput(\"clickedhh\"))\n              \n      ),\n      tabItem(tabName = \"map-schedule\",\n              fluidRow(\n                column(width = 12,leafletOutput(\"mapsched\",width = 1400, height = 700))\n              )\n      ),\n      tabItem(tabName = \"map-summary\",\n              h2(\"Show map\")\n      ),\n      tabItem(tabName = \"graph-household\",\n              h2(\"Show graph\")\n      ),\n      tabItem(tabName = \"graph-schedule\",\n              h2(\"Show graph\")\n      ),\n      tabItem(tabName = \"graph-summary\",\n              h2(\"Show graph\")\n      )\n    )\n  )\n))",
    "created" : 1524763331976.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2564227025",
    "id" : "84E3FEB4",
    "lastKnownWriteTime" : 1525275452,
    "last_content_update" : 1525275452151,
    "path" : "~/ActivityPriority/Albatross4/ui.R",
    "project_path" : "ui.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}